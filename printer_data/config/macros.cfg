#####################################################################
#   A better print_start macro for v2/trident
#####################################################################

[gcode_macro PRINT_START]
# Source https://github.com/jontek2/A-better-print_start-macro
gcode:
#This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
  {% set FILAMENT_PROFILE = params.FILAMENT_PROFILE|default('none')|string %}
  {% set BED_TYPE = params.BED_TYPE|default('unknown')|string %}

 #Announce Filament Profile
    {action_respond_info("Filament Type: " ~ FILAMENT_PROFILE)}  # This will display the actual bed type in the console
     # {% if FILAMENT_PROFILE == 'PLA' %}
      #          {action_respond_info("PLA")}
       #     {% elif FILAMENT_PROFILE == 'PETG' %}
        #        {action_respond_info("PETG")}
         #   {% elif FILAMENT_PROFILE == 'ASA' %}
          #      {action_respond_info("ASA")}
           # {% elif FILAMENT_PROFILE == 'ABS' %}
            #    {action_respond_info("ABS")}
            #{% elif FILAMENT_PROFILE == 'TPU' %} 
             #   {action_respond_info("TPU")}
          #{% endif %}

#Announce Build Plate Profile
    {action_respond_info("Bed Type: " ~ BED_TYPE)}  # This will display the actual bed type in the console
     # Use the BED_TYPE value for additional actions
   #   {% if BED_TYPE == 'High Temp Plate' %}
    #      {action_respond_info("High Temp Plate Z-Offset selected")}
   #   {% elif BED_TYPE == 'Textured PEI Plate' %}
    #      {action_respond_info("Textured PEI Plate Z-Offset selected")}
    #  {% else %}
    #      {action_respond_info("Unknown bed type")}
    #  {% endif %}

    #  {action_emergency_stop("Impending Doom Averted!")} 
    
#Initial homing
        SET_DISPLAY_TEXT MSG="Initial Homing"                   # Display info on display
        #STATUS_HOMING                                         # Set LEDs to homing-mode
        BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)
        G28                                                   # Full home (XYZ)
        G90                                                   # Absolute position
        M190 S{target_bed}  # Set and wait for bed temperature

#Check if the bed temp target is higher than 90c - if so then trigger a heatsoak. IF ABS OR ASA
        {% if params.BED|int > 90 and (FILAMENT_PROFILE == 'ASA' or FILAMENT_PROFILE == 'ABS') %}
              SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
              #STATUS_HEATING                                      # Set LEDs to heating-mode
              M106 S255                                           # Turn on the PT-fan
              PARK_EXTRUDER   ; goes to scrubber when waitning
              BEDFANSSLOW
              M190 S{target_bed}                                  # Set the target temp for the bed
              BEDFANSFAST
              SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Display info on display
              TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber temp
    
        {% else %} #If the bed temp target is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
                    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
                    #STATUS_HEATING                                      # Set LEDs to heating-mod
                    PARK_EXTRUDER
                    BEDFANSOFF
                    M190 S{target_bed}                                  # Set the target temp for the bed
                    SET_DISPLAY_TEXT MSG="Soak for 5 min"               # Display info on display
                    #G4 P300000                                          # Wait 5 min for the bedtemp to stabilize
                    {% endif %}

#Hot Homing and Leveling, set absolute positioning and update the Stealthburner LEDs.
        SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
        M109 S150  # Set hotend to 150°C and wait until it's reached
        G28 Z 
        #STATUS_LEVELING                                      # Set LEDs to leveling-mode
        QUAD_GANTRY_LEVEL                                    # Level the printer via QGL

#Nozzle Wipe and home Z after QGL
        SET_DISPLAY_TEXT MSG="Wiping"
        G90 ; Absolute coordinates.  
        G1 Z10 F1200 ; Make sure we don't hit the bed during wiping passes
        G1 X240 Y305 F15000; start position, should be very close to where steel plate rub seq. ended
        G1 Z3 F1200; lower onto wiper
        M83 ; Relative extruder mode.
        G91 ; relative mode
        G1 X45 F15000  ; run snake pattern from top back to front, run at max accell.
        G1 X-45  
        G1 X45 
        G1 X-45
        G1 X45 
        G1 X-45
        G1 X45 
        G1 X-45
        G1 X45 
        G1 X-45
        G90 ; restore to absolute mode
        G0 Z10 F1200 ; Make sure we don't hit the bed during wiping passes
        G0 X150 Y150 F9000 ; Move to center
        G28 Z                     ; Home the Z now that nozzle is clean

#Bed mesh (2/2)
        SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
        #STATUS_MESHING                                       # Set LEDs to bed mesh-mode
        BED_MESH_CALIBRATE ADAPTIVE=1                         # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh

# Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
  #STATUS_HEATING                                        # Set LEDs to heating-mode
  G0 X150 Y150 F9000 ; Move to center
  M107                                                  # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

#Primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"               # Display info on display
        #STATUS_PRINTING                                       # Set LEDs to printing-mode  
     LINE_PURGE  # Perform the purge

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
  
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-15.0 F3600                ; retract 15mm filament

    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    #TURN_OFF_HEATERS              ; turns off both bed and hotend heaters
    M104 S0                        ; turns off only hotend
    M107                           ; turn off fan
    G1 Z25 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    
    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

[gcode_macro PARK_EXTRUDER]
description: Park the extruder at the nozzle wiper position
gcode:
  G90                         ; Set to absolute positioning mode
  G1 X240 Y305 Z10     ; Move the extruder to the nozzle wiper position (adjust coordinates if needed)
  SET_DISPLAY_TEXT MSG="Extruder Parked"   ; Display message on screen
  
[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro G32]         #home all axis
gcode:
    BED_MESH_CLEAR
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28 X Y                ; Home the X and Y
    G0 X165 Y305 Z3 F9000     ; Move to brush
    G0 X210 F750               ; Move across the brush
    G0 X165 F750              ; Move across the brush
    G28 Z                     ; Home the Z now that nozzle is clean
    #Park center of bed 150, 150
    G0 X150 Y150 Z30 F9000

[delayed_gcode clear_display]
gcode:
  M117

[gcode_macro SCRUBBLER] - #heats nozzle before wipe then levels and QGL
gcode:
#Hot Homing and Leveling, set absolute positioning and update the Stealthburner LEDs.
        SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
        M109 S150  # Set hotend to 150°C and wait until it's reached
        G28 
        G90 ; Absolute coordinates
        #STATUS_LEVELING                                      # Set LEDs to leveling-mode
        QUAD_GANTRY_LEVEL                                    # Level the printer via QGL
 #Nozzle Wipe and home Z after QGL
        SET_DISPLAY_TEXT MSG="Wiping"
        G90 ; Absolute coordinates.  
        G1 Z10 F1200 ; Make sure we don't hit the bed during wiping passes
        G1 X240 Y305 F30000; start position, should be very close to where steel plate rub seq. ended
        G1 Z3 F1200; lower onto wiper
        M83 ; Relative extruder mode.
        G91 ; relative mode
        G1 X45 F15000  ; run snake pattern from top back to front, run at max accell.
        G1 X-45  
        G1 X45 
        G1 X-45
        G1 X45 
        G1 X-45
        G1 X45 
        G1 X-45
        G1 X45 
        G1 X-45
        G90 ; restore to absolute mode
        G0 Z10 F1200 ; Make sure we don't hit the bed during wiping passes
        G0 X150 Y150 F9000 ; Move to center
        G28 Z                     ; Home the Z now that nozzle is clean


[gcode_macro PAUSE_MACRO]
gcode:
      PLAY_LONG_FEEDBACK_SOUND
      M5
      PAUSE
      #PARK_MACRO
      #SET_IDLE_TIMEOUT TIMEOUT=7200 #should turn off motors after a specific time limit

[gcode_macro PURGE]
gcode:
      M117 PURGING..
      G91
      G1 E50 F250
      G90

 [gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E25 F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  50
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E-50 F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro RESUME_MACRO]
gcode:
      M117 RESUMING...
      RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT


##Replace M109 (wait for hotend temperature) and M190 (wait for bed temperature) with TEMPERATURE_WAIT.
#This just makes Klipper resume immediately after reaching temp. Otherwise it waits for the temperature to stabilize.

[gcode_macro M109] #(wait for hotend temperature)
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}


[gcode_macro M190] # (wait for bed temperature) 
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}

    
[gcode_macro _KNOMI_STATUS]
variable_homing: False
variable_probing: False
variable_qgling: False
variable_heating_nozzle: False
variable_heating_bed: False
gcode:

[gcode_macro M109]
rename_existing: M109.1
gcode:
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=True
 M109.1 {rawparams}
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=False

[gcode_macro M190]
rename_existing: M190.1
gcode:
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_bed VALUE=True
 M190.1 {rawparams}
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_bed VALUE=False

[gcode_macro G28]
rename_existing: G28.1
gcode:
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True
 G28.1 {rawparams}
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False

[gcode_macro test_speed_fast]
gcode:
        G28 X0 Y0
        GET_POSITION
        G1 X0 Y0     F27000
        G1 X350 Y350 F27000
        G1 X0 Y0     F27000
        G1 X350 Y350 F27000

        G1 X0 Y350 F36000

        G1 X350 Y0 F27000
        G1 X0 Y350 F27000
        G1 X350 Y0 F27000
        G1 X0 Y350 F27000

        G1 X0 Y0 F36000
        G1 X350 Y0 F36000
        G1 X350 Y350 F36000
        G1 X0 Y350 F36000
        G1 X0 Y0 F36000
        G28 X0 Y0
        GET_POSITION

#It’s just handy to have a shortcut to turn off everything at once!
[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    #SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    #SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    #SET_PIN PIN=caselight VALUE=0       ; turn case light off
[include mainsail.cfg]
[include KAMP_Settings.cfg]
[exclude_object]

# Cancel object (aka Marlin/RRF M486 commands) support
#
# Enable object exclusion

# host MCU service is preinstalled and ready to use with:
[mcu]
canbus_uuid: 9a1cec31d8b6
[mcu EBBCan]
canbus_uuid: 12e3b9123a86

[gcode_arcs]
#resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.s with an "mcu" prefix). Additional micro-controllers introduce additional pins that may be configured as heaters, steppers, fans, etc.. For example, if an "[mcu extra_mcu]" section is introduced, then pins such as "extra_mcu:ar9" may then be used elsewhere in the config (where "ar9" is a hardware pin name or alias name on the given mcu).

#Firmware filament retraction. This enables G10 (retract) and G11 (unretract) GCODE commands issued by many slicers. The parameters below provide startup defaults, although the values can be adjusted via the SET_RETRACTION command), allowing per-filament settings and runtime tuning.

[firmware_retraction]
retract_length: 0.8
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 30
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 20
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[input_shaper]
shaper_freq_x: 63.83  # frequency for the X mark of the test model
shaper_type_x: mzv
shaper_freq_y: 63.83  # frequency for the Y mark of the test model
shaper_type_x: mzv

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 5000    			#Max 4000
max_z_velocity: 30			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[temperature_sensor MCU]
sensor_type: temperature_mcu

[temperature_sensor SoC]
sensor_type: temperature_host

[temperature_sensor chamber]
sensor_type: NTC 100K beta 3950
sensor_pin: pb0
min_temp: 0
max_temp: 100
gcode_id: C

[temperature_sensor EBB_SB2209]
sensor_type: Generic 3950
sensor_pin: EBBCan:gpio28

[adxl345]
cs_pin: EBBCan:gpio1
spi_software_sclk_pin: EBBCan:gpio2
spi_software_mosi_pin: EBBCan:gpio0
spi_software_miso_pin: EBBCan:gpio3
axes_map: z,-y,x

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345

[extruder]
step_pin: EBBCan:gpio18
dir_pin: EBBCan:gpio19
enable_pin: !EBBCan:gpio17
microsteps: 16
rotation_distance: 23.3139617   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan:gpio7
sensor_type: Generic 3950
sensor_pin: EBBCan:gpio27
#control: pid
#pid_Kp: 26.213
#pid_Ki: 1.304
#pid_Kd: 131.721
min_temp: 0
max_temp: 300
##	Try to keep pressure_advance below 1.0
#pressure_advance: 0.00
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
max_extrude_cross_section: 5

# sensor_type: MAX31865
# sensor_pin: EBBCan:gpio9
# spi_software_sclk_pin: EBBCan:gpio10
# spi_software_mosi_pin: EBBCan:gpio8
# spi_software_miso_pin: EBBCan:gpio11
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan:gpio20
run_current: 0.650
stealthchop_threshold: 999999

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
  timeout: 1800

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position:150,150
speed:100
z_hop:10

[quad_gantry_level]
gantry_corners:
	-60,-10
	360,370
points:        # Probe points
	50,25
	50,225
	250,225
	250,25
speed: 300
horizontal_move_z: 10
retries: 4
retry_tolerance: 0.0075
max_adjust: 10

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE7, EXP1_2=PG1,
    EXP1_3=PG0, EXP1_4=PF15,
    EXP1_5=PF14, EXP1_6=PF13,    # Slot in the socket on this side
    EXP1_7=PF12, EXP1_8=PF11,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PE15, EXP2_4=PE11,
    EXP2_5=PE10, EXP2_6=PE14,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>

[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 260,260
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic


#####################################################################
# 	Fan Control
#####################################################################

#[fan_generic soc-fan]
#pin: host:gpio79  #CB1
#pin: host:gpio26  #CM4

##  Print Cooling Fan - FAN0
[fan]
pin: EBBCan:gpio13
max_power: 1.0
shutdown_speed: 0.0
cycle_time: 0.010
hardware_pwm: False
kick_start_time: 0.100
off_below: 0.0

##  Hotend Fan - FAN1 
[heater_fan hotend_fan]
pin: EBBCan:gpio14
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[temperature_fan controller_fan]
pin: PF7
sensor_type: temperature_host
target_temp: 30.0
off_below: 0.1
min_temp: 0
max_temp: 85
max_power: 1.0
min_speed: 1.0
shutdown_speed: 0.0
kick_start_time: 0.5
control: pid
pid_kp: 1.0
pid_ki: 0.5
pid_kd: 2.0

##  Filter fan - FAN3
[heater_fan Bed_fan]
pin: PF9
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 100
fan_speed: 1.0


## Fan4
#[heater_fan Filter_fan]
#pin: PF6 

## Fan5
#[heater_fan fan5]
#pin: PA6
#tachometer_pin: PC2

## Fan6
#[heater_fan fan6]
#pin: PA2
#tachometer_pin: PC1


#[fan_generic 4W_FAN0]
#pin: EBBCan:gpio15
#tachometer_pin: EBBCan:gpio12
#tachometer_ppr: 1

#####################################################################
# 	LED Control
#####################################################################

[output_pin caselight]
# Chamber Lighting - HE2 Connector (Optional)
pin: PA3
pwm:true
shutdown_value: 0
value: 0.3
cycle_time: 0.01

[neopixel hotend_rgb]
pin: EBBCan:gpio16
chain_count: 3
color_order: GRBW
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 0.12
initial_WHITE: 0.0

## NPN and PNP proximity switch types can be set by jumper

#####################################################################
# 	Probe
#####################################################################

[probe]
pin: ^EBBCan:gpio22
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 10.0
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}



#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on Motor1(B Motor)
[stepper_x]
step_pin: PE6
dir_pin: PE5
enable_pin: !PC14
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: EBBCan:gpio24
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 75
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC13
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

## Y Stepper on Motor2 (A Motor)
[stepper_y]
step_pin: PE2
dir_pin: PE1
enable_pin: !PE4
microsteps: 16
rotation_distance: 40
endstop_pin: ^PF3
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
position_min: 0
position_endstop: 305
position_max: 305
homing_speed: 75
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PE3
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR3_A
[stepper_z]
step_pin: PB8
dir_pin: PB7
enable_pin: !PE0
rotation_distance: 40
microsteps: 16
gear_ratio: 80:16
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0
position_max: 290
position_min: -5.0
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PB9
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear Left on Motor5
[stepper_z1]
step_pin: PG13
dir_pin: !PG12
enable_pin: !PG15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PG14
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right on Motor6
[stepper_z2]
step_pin: PG9
dir_pin: PD7
enable_pin: !PG11
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PG10
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z3 Stepper - Front Right on Motor7
[stepper_z3]
step_pin: PD4
dir_pin: !PD3
enable_pin: !PD6
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PD5
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - HE1
heater_pin: PA1
sensor_pin: PB1 # TB 
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
#sensor_type:
sensor_type: Generic 3950
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.88
min_temp: 0
max_temp: 130
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Chamber temperature sensor
#####################################################################

#[temperature_sensor chamber]
#sensor_type: Generic 3950
#sensor_pin: PF5
#min_temp: 0
#max_temp: 100
#gcode_id: C


#####################################################################
#   Filament runout sensor
#####################################################################

#[filament_switch_sensor filament_sensor]
#switch_pin: PG11 
#pause_on_runout: false
#runout_gcode: M600



#####################################################################
# 	Macros
#####################################################################

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro G32]         #home all axis
gcode:
    BED_MESH_CLEAR
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28                 ; Home the X and Y and Z
    G0 X165 Y305 Z3 F9000     ; Move to brush
    G0 X210 F750               ; Move across the brush
    G0 X165 F750              ; Move across the brush
    G28 Z                     ; Home the Z now that nozzle is clean
    #Park center of bed 150, 150
    G0 X150 Y150 Z30 F9000



[gcode_macro ASCRUBBLER] 
gcode:
  M104 S190
  G90 #ensure absolute mode (should already be in it, but here for saftey)
  G28
  QUAD_GANTRY_LEVEL
  G1 Z10 F1200 ; Make sure we don't hit the bed during wiping passes
  G1 X165 Y305 Z2 F30000; start position, should be very close to where steel plate rub seq. ended
  G91 ; relative mode
  G1 X45 F30000  ; run snake pattern from top back to front, run at max accell.
  G1 X-45  
  G1 X45 
  G1 X-45
  G1 X45 
  G1 X-45
  G1 X45 
  G1 X-45  
  G1 X45 
  G1 X-45
  G1 X45 
  G1 X-45 
  G90 ; restore to absolute mode
  G0 X150 Y150 Z30 F9000
  G28 Z                     ; Home the Z now that nozzle is clean
  G0 X150 Y150 Z50 F9000 #Park center of bed 150, 150


    
#--------------------------------------------------------------------

#[gcode_macro PRINT_START]
  #   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
  #gcode:
  #    G32                            ; home all axes
  #    G90                            ; absolute positioning
  #    G1 Z20 F3000                   ; move nozzle away from bed
     
#####################################################################
#   A better print_start macro for v2/trident
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Nevermore (if you have one)
## Z_TILT_ADJUST (For Trident only)
## QUAD_GANTRY_LEVEL (For V2.4 only)
## Beacon Contact logic (if you have one. 4 lines at 4 locations)

[gcode_macro PRINT_START]
# Source https://github.com/jontek2/A-better-print_start-macro
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  M104 S150 ; set hotend temp and does not wait for stabilization
  M140 S{target_bed} ; set target temp and does not wait


  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  #STATUS_HOMING                                         # Set LEDs to homing-mode
  G90                                                   # Absolute position
  G28                                                   # Full home (XYZ)
  BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)
  
  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  #{% if params.BED|int > 90 %}
   # SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
     # STATUS_HEATING                                      # Set LEDs to heating-mode
    #M106 S255                                           # Turn on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turn on the nevermore
    #G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    #M140 S{target_bed}                                  # Set the target temp for the bed
    #SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Display info on display
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber temp

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  #{% else %}
   # SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    #STATUS_HEATING                                      # Set LEDs to heating-mode
    #G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    #M190 S{target_bed}                                  # Set the target temp for the bed
    #SET_DISPLAY_TEXT MSG="Soak for 5 min"               # Display info on display
    #G4 P300000                                          # Wait 5 min for the bedtemp to stabilize
  #{% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  #SET_DISPLAY_TEXT MSG="Hotend: 150c"                   # Display info on display
  #104 S150                                             # Heat hotend to 150c

  ##  Uncomment for V2.4 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  #STATUS_LEVELING                                      # Set LEDs to leveling-mode
  QUAD_GANTRY_LEVEL                                    # Level the printer via QGL

  G1 Z10 F1200 ; Make sure we don't hit the bed during wiping passes
  G1 X165 Y305 Z2 F30000; start position, should be very close to where steel plate rub seq. ended
  G91 ; relative mode
  G1 X45 F30000  ; run snake pattern from top back to front, run at max accell.
  G1 X-45  
  G1 X45 
  G1 X-45
  G1 X45 
  G1 X-45
  G1 X45 
  G1 X-45  
  G1 X45 
  G1 X-45
  G1 X45 
  G1 X-45 
  G90 ; restore to absolute mode
  G0 X150 Y150 Z30 F9000
  G28 Z                     ; Home the Z now that nozzle is clean
  G0 X150 Y150 Z30 F9000 #Park center of bed 150, 150
    
  ##  Uncomment for bed mesh (2 of 2 for bed mesh)
  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
  #STATUS_MESHING                                       # Set LEDs to bed mesh-mode
  BED_MESH_CALIBRATE ADAPTIVE=1                                   # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
  #STATUS_HEATING                                        # Set LEDs to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to center of the bed
  SMART_PARK
  M107                                                  # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"               # Display info on display
    #STATUS_PRINTING                                       # Set LEDs to printing-mode
    #G0 X{x_wait - 50} Y4 F10000                           # Go to starting point
    #G0 Z0.4                                               # Raise Z to 0.4
    #G91                                                   # Incremental positioning 
    #G1 X100 E20 F1000                                     # Primeline
   #G90                                                   # Absolute position
  LINE_PURGE


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract 10mm filament

    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z25 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    
    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0



[gcode_macro PAUSE_MACRO]
gcode:
      PLAY_LONG_FEEDBACK_SOUND
      M5
      PAUSE
      #PARK_MACRO
      #SET_IDLE_TIMEOUT TIMEOUT=7200 #should turn off motors after a specific time limit

[gcode_macro PURGE]
gcode:
      M117 PURGING..
      G91
      G1 E50 F250
      G90

 [gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E25 F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  50
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E-50 F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro RESUME_MACRO]
gcode:
      M117 RESUMING...
      RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT


##Replace M109 (wait for hotend temperature) and M190 (wait for bed temperature) with TEMPERATURE_WAIT.
#This just makes Klipper resume immediately after reaching temp. Otherwise it waits for the temperature to stabilize.

[gcode_macro M109] #(wait for hotend temperature)
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}


[gcode_macro M190] # (wait for bed temperature) 
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}

    
[gcode_macro _KNOMI_STATUS]
variable_homing: False
variable_probing: False
variable_qgling: False
variable_heating_nozzle: False
variable_heating_bed: False
gcode:

[gcode_macro M109]
rename_existing: M109.1
gcode:
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=True
 M109.1 {rawparams}
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=False

[gcode_macro M190]
rename_existing: M190.1
gcode:
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_bed VALUE=True
 M190.1 {rawparams}
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_bed VALUE=False

[gcode_macro G28]
rename_existing: G28.1
gcode:
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True
 G28.1 {rawparams}
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False

[gcode_macro test_speed_fast]
gcode:
        G28 X0 Y0
        GET_POSITION
        G1 X0 Y0     F27000
        G1 X350 Y350 F27000
        G1 X0 Y0     F27000
        G1 X350 Y350 F27000

        G1 X0 Y350 F36000

        G1 X350 Y0 F27000
        G1 X0 Y350 F27000
        G1 X350 Y0 F27000
        G1 X0 Y350 F27000

        G1 X0 Y0 F36000
        G1 X350 Y0 F36000
        G1 X350 Y350 F36000
        G1 X0 Y350 F36000
        G1 X0 Y0 F36000
        G28 X0 Y0
        GET_POSITION

#It’s just handy to have a shortcut to turn off everything at once!
[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    #SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    #SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    #SET_PIN PIN=caselight VALUE=0       ; turn case light off

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 61.471
#*# pid_ki = 1.805
#*# pid_kd = 523.274
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 36.654
#*# pid_ki = 6.431
#*# pid_kd = 52.230
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.005000, 0.005000, 0.037500, 0.007500, -0.010000
#*# 	-0.017500, -0.002500, 0.030000, -0.015000, -0.015000
#*# 	-0.035000, -0.007500, 0.000000, 0.007500, -0.010000
#*# 	-0.025000, 0.005000, 0.030000, 0.007500, -0.022500
#*# 	-0.002500, 0.030000, 0.007500, -0.012500, -0.042500
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 260.0
#*# min_y = 40.0
#*# max_y = 260.0
#*#
#*# [probe]
#*# z_offset = -0.960
